#!/usr/local/bin/ruby

ROOT_PATH = "<%= @deploy[:deploy_to] %>"
PID_DIR = "<%= @deploy[:deploy_to] %>/shared/pids"

<% (@deploy[:environment] || []).each do |k,v| %>
  ENV["<%= k %>"] = "<%= v %>"
<% end %>

def run_and_ignore_exitcode_and_print_command(command)
  puts command
  pid = spawn(command)
  sleep 1
  childpid = `ps -e -o pid= -o ppid= | awk -v pid="#{pid}" '$2==pid {print $1}'`.strip
  childpid
end

def start_logvalet(worker_num)
  pid = run_and_ignore_exitcode_and_print_command "cd #{ROOT_PATH}/current && bundle exec rake logvalet:poll &> <%= @deploy[:deploy_to] %>/shared/log/logvalet.log"
  File.write(pid_file_path(worker_num), pid)
end

def stop_logvalet(worker_num)
  pid_file = pid_file_path(worker_num)
  
  unless File.exists?(pid_file)
    puts "pid file #{pid_file} does not exist"
    exit 1
  end

  pid = File.read(pid_file).to_i

  Process.kill :SIGTERM, pid

  dead = false
  30.times do
    sleep 1
    status = `ps -p #{pid} -o state=`.strip
    if %w(R D S).include?(status)
      next
    else
      dead = true
      break
    end
  end

  Process.kill(:SIGKILL, pid) unless dead
  File.delete(pid_file)
end

def pid_file_path(worker_num)
  "#{PID_DIR}/logvalet_#{worker_num}.pid"
end


case ARGV[0]
when "start"
  start_logvalet ARGV[1]
when "stop"
  stop_logvalet ARGV[1]
else
  puts "Usage: {start|stop} WORKER_ID"
  exit 1
end

exit 0